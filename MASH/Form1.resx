<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="greenBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFn
        ZVJlYWR5ccllPAAAEIxJREFUaEPtWAtwXNV5vmfv7t6775dWq9VqV7JkW5Yty4+ACemEQB4wIRgb/CCJ
        05iQOk6Medtj/ADbGL+DBXZiybbkhyTrbckY/MCP0AydtuljJtN2+mCmaTvtMCmdQNMO00CAv993do+8
        dgyYNGRop0fzae+9e+453/e/zjlrfRzabbNvuwT/a9v/GSEfq+biT1lKpf3pQK45V5mfnZ9YWFy4Fvh0
        4evAosJ1+TvyTblrctmqSFXIsRxP6dWPR/NYHk+2kI3XzKu5Nvdgbll+Q75zXOu4lyZ2THx5cvfknzYf
        af4Z8NrkQ5NfbTzQ+JOG3Q0/qnuyrje/Ir8S4j6Tb8lXhqyQXRrut9M8notGtC3bzs3M5aqXVi/KPZEb
        bmhr+JeWwZa3P3HyE3LN+Wtk5oszZdoPpknLhRaZemGq/px+YbrMODdDZp7Cd8PT3p3UMenf6rbUnc0v
        yy8v3FgYH7WiPo7t9Xovmes335T+78nkM4nqu6vvqt5cfa6xq/GNmSdnyowfzJCmC01Sf65e6s7WSe0L
        te+JcWfHyYRzE6T5fLNMPzVdmrqb3ipsK/xZbknu3tzUXDXn0DOhUdRvpClVZM+GHPBlb8o2V66o3F/X
        XvfvM07OkJYXW6ThXIMmWPdCndSdgYjTtZJ/Pi/Vx6ulaqRKo3q0Wmqeq5HaU+iHPuyrRb0wThrPNUrz
        qWZp6Gj4r+yq7LPVX6y+IWJFXD0l2v/YO2UiFJLZrZxTeUt6Y/oPG/sb3512ftolAgonC5IZzkj0YFTc
        Z1zxb/WLs9ERd70r7gZXXztbcN/qSvRAVCoHKrVYI4qYeHaiTBicIFWbqv4usyCzOOkko5ybBGz710yj
        y0QEK+ZW3FWxueLlptEmaTrfNDY5BaSOpsRpBdENjqSfSEvDrgaZsn+KTD0yVZp7mmVKzxRBwsvkA5Nl
        fOt4qdpYJcHHguLscCTZlZT8cxcF1Z+tl/EnxktmR+bV5ILkw1E3miAHEvnQYijCCEFSBxK3JuYnNyV/
        Mun4JB3bWsTpOqkaqtIWdte6Uru1Vpq7EB4jDZIeTUt4OCzOgCP+Pr/4jwK9fgn2ByU5nJTa4VqZ3DNZ
        6r9bL+E1YXF3uJLpz0jdqaIYhtu4E+MksTXxs8jsyAMwZIy0yKc81D+waSG2fsEfmRX5bGR15K8ajjXI
        +LPj9USMc1rSu8ErlY9XStORJsmOZMUddMV31CdOlyOBQwFxOyByH8KqDd4C9HWnI77DPt0vNZySiT0T
        JfdkTvzr/JLoTEjt86VcA2pGaiS0NvSKe727CGU+aLhdVSvraLsZd5L7LfdMdVf1RREnayXeERffap/U
        7cT9UK04/SDX7RP3IHKjzS/2HlvUbiXqGaAV2AXsKMKz0yPeVq8W5jvkE+9Rr/Zs/e56CawKSLQtKoXn
        C2OhlupJib3U/rFda/8OOOnyfFViSp3ok6R9q705uiv6Vv1plFRaCa5PdCTEt9Inda11kh5Oi91ti3MQ
        pPb6LpJ/GnjqMmwHtgFbS58QZbfa4m+H8C5bokNRQSWUwMqAxNpjY54pnC5IsDUo1myrG5xqAI+OmPcT
        ozsU//xqnLrZfsj+h+xwVscsc6LyaKX4Vvkktz0niaGEeI54xLfPJ57dHlF7QI5C6IHvAoZ4yRNawKYS
        nizd8zlEetu9YvfYEhwOSs33asRZ4UjFwYqxnKk6ViX2Svt1q8W6B9yC3pD3qoTwf9a6zeoI7wlL7Zli
        3We8OusdSa1NSbI/qUV427zFsCF5eoLXOwESNNYntgCbgY0lbACeACiW78AI9j5bPD0eXSRQHcVZ7Uhu
        MKfnJofIvohY861z8Ecj+Gmv+Pw60i5tmn5RiE9l1S2e+zz/lBlCJSmFVPz7cXGXu5I6mBJPt0c87fAC
        Q4bE6QGC10ZIeShRBL1A8utL4D378D0a4XvInw6M2ask2huV0CMhie1CiD1XDLGqUXjlEfvnaqKiVwLk
        fMWFUovwaCFJ63prm7PVeadwCkmHQWqGa8S/ClXlyYQuo+oAJqYXjOVJqFyQEcXn9AZJEwwreoSCKNC8
        R68wLL8PdMA7/bYkdyfFfcSVXF/RK4UzBV3qrZutPnDMo4qB8hXCq+QNSpliLbR+GO1E8hlvtMEb97sS
        OxQTdQiT0YIkQBEkakhRmPGG8QRJl4NC+Nz0JTgWvcs8a1diHbEk0huR8Iqw9krdyWKuxLpiYi22XlYR
        9Rnw9GrOl4txHIdCHJVWt6t71SupwZTe3FUNV4l3rVdi62Li9Dp6Ij0pCZj4pyCDcgHMBRNKxOOlZ0aI
        8R7Ho1dooL0AvOLt9UpyO9aqFVir+it1wak4ViHqIfWGqlfLwDX0K0LMDR5H1SS1Qq1Wv4gMRCR9PC3+
        vSiP99qSaEWV6ipVJxM2JE2UCzC5QMIk/lgZ1gEUxH4mrIwIlmyGF4XQWEeULvX+ZX7xPe2TitEKXaL1
        uNehp6Uqf0WIz1daZyxVhU57NJHDRVjbLXGWOhLrQFgdREKy1NKKJGIEmKp0uQgSL8cagIKYK3yf4yDX
        PM9gTIpAwqs23LfhvlPp8ArdHxJrk6Xnpjj93ufUCXAdDxFsWoNuzP7iI9WgblSDmiCFYDBroyXBZUEJ
        d4V1VQkfCBctSBIMj3JvkCCF0OrGA8RagCJWl+7Zj+9xjHJvlISEOkPi7fRKoB8r/cqoWGshhAWGQlhk
        bld/DK4zAV2Gx1pJiE509Xl1RrucLyFWOUhoeUgCPQHxdmA70YOc2Y31gyFhxNBK9ApFMJlNPpR74lHA
        CGE/ijd5QnIUwxIMb2R6MuLvxDGgz5H42riolfhuH0BOFDxf/SX4fhp8dcKPNe0LxW2imq6+oF7Ug/Ml
        WmGVkvAy7FB7XC2kdrBWb+60Jcs9Q2K0tBFhPGJElAuh2MuEWLthdZRfnmc4BzeXLPXxdRDyEPqU8kbn
        6Hz1NzD758DXdyUh9MgMdZO6oCcoCbEehUe+DY90BcTeb0t+AGeHQWzmsDAG2gLi3+PXm0B7B1bmLVgo
        nwDWA48B64A1ZeD94wD62Nts8e70im8XNpt7XAnvC0vqUEoKfQUtxNfh00eA+OrLhNBzd6i/Bt/Pv5+Q
        FnW9OqnjnTnC0FqHHFkSlNCRkHgOeCTbh73X0Dip6auRTHdG0ofTkuxMSrw9LtzSBHcFJbgzKIFtAQls
        wVZ+M7byQGAz7rcGJLQ9JJFdEYnvjktFW4VUdeAYfBjH4O4aqenFUXigVmoGasTusMXtw2nyYeTICnjL
        hBY9eKv6MbjeCFwxtPi/UU3FJoHu58KHZGc8O4sdfTzlfao7JXVDdXrFrTiCktiBo+1enENafUWvbIbF
        NwLwyuXlV3uD3qJHNtvi2+mT4O6gJPYnJN2VluzRrBQGcWTuzei5wkfDEvoOqtaaUrLTuAzJG9QPwfU6
        MLbJeqxpCQSWflVAxD6gfqlFUAzCzP66LfGn4GIMFD4UlsJQcTJuwXXMmm17ea6YxZBiCF7zGfODYJ/S
        YsozSmBvQO+u80P54gp+2NLnHuduLMLsa/jQyNPUELhOAedLq1aZkBSWxIfVIvW6XphoAa62S5CEK6L6
        8MTYrR6olng3hKFU6n4Uw2pCMaaCcXJD2oDVis+53jB8KZr9WSVROLgFqh6s1ucbuxf7ra3YZX8DnuW4
        5LIfuFe9iVPJLnAtGN5jrUxIEJ/zkEZ/qyfgyyT6sBL3a0jITqwhWJiSvUlJ9aaKAzN2mYjc8FG08YxZ
        IEncwAgw2xojguUXhoh2RSXVh3Exb6gfubQsIup+fMexyYWen6f+VQUgx1KJ9xaikDyWmoVMOaEewUt0
        JxKeJDwLPRJfH9d7IP6YwJ9znMOOWAdKiUjBXNAohsSMZy6HEUCxJU9QhHefV4tgmff0eyS1JyW+r+LU
        yXAkB67szLVZ6k/A8Yvg6hrel7TSQ/7PY3e5CbX655oULcGwWaYk8GWstKjzagBhMBiTZF9S7EM4nzMR
        6RWGmvEMSZIsSZfDCKDnaGGEpWefR6I9UYn1x8TT65FIX0SiSzHPt0t9TGTcg7DKYray/CAuaeYhEMb/
        O7E0/ikXQ+0VgqFxFwTcF5PgUFD8Q359Zo/1xsR7CCs9rUbPUAxzhpYmWZbLchgBNA7IcdsT7EblGkjo
        n4+cIZxCN6bE/goMxLyikZjkDMsb1d+jTi0Fv9QVRbCVCeEKP1nFYNc71X/qyY1FVqCCzbUltQGL4WhA
        IiMRyRzLSKwPYo5ADN3PiekVEiXoHYLk+cln+N6zH0dlGCDUE5LEYEKf1/3H/FLxdIX4F6IaIi91qHJu
        ft6j3lI5xUPV9eDoN3yv2MyXQBT/FyBX/gDufVdbmVYhmfuU+O70SXpLWsKjOPgcj0l2NCupAYjjfoyC
        KMYUAb5L8BrPuNDxdy32jfZHL4oYhog9FRK4K6DDWHuOhqGnubWZhdXcAzaWyoAfW4n1FRq/LIFemQDd
        66H/n3WIkRwHpoeWF8Wk1qUkNhST8PGw/nWxYrhCIv0RCRzFio6kdboRKiXwPngUu+je8JiAxLGEuMN4
        jlBlqXUXuILAKeaSSXAWiNnqNeTtHnCaCW56W0K8bzOdgAD+3wDfHFI3I/G5qHFw5gut9SCse4ctsSUx
        SbQnJDCC7cfxkCSPJ7Wo9EhRGH9NTA0B+NT3x1ISH4lLaCQk7ogr8cNxSTyYEO9cePI7GJfFwOQFjbZI
        /QIhxfPHHHCKGn4f2ExHgC2Jq/k4/p5QX8IRk6uz8QzjnZ5CAXDmOJpMsi0pkaGIBJ+F5U+EJXIiIrET
        MYk+G5XIszgkQagWPIS8wA46uSYpgQUIpQUYh+WeBYKGYl7QWIuRFw3qJXBYAi454MqV6r2a6Vx6MYer
        b+BgeQabtTf0tpzxTouxALCaINTUQiX+uX6J3B2R5KNJqXgK1m+HJ7BLTh5MSnIf8FRSEmsSErknIs5c
        RzzzsGrTC1zxWSA4pvHE70JEvfojzP8Q5p+Azyv/2PBBzbwEcGNWi6tvouidQAl8HXuxokfMgslyyxUb
        Vc36JhZIiGLY+eb6xLkDOQLw2p6DkjoPfRajD0JTC+A4HINeYIHgs4UwWEH9PuZ9GPM24fP9q9QHNfMy
        QGvkcfVVbGK6sMb8I2L3bb3SUoRZa+gprupMUIYhqw1PdxCow5D9KZhhQw+YMKUALpLLUSFvUj+FwUYx
        11LMOREYE0H82q1sEHomjatbcLUNK+xLOGy+hjh+d0wQLcvQMGWzfC/GTxKnYH7yGcs5Fz2W2y9hzZqg
        /hy0WZ3mYa48cHUV6mqbGQxgCwMtuPs9TLofGfQj9Sn1KpL+l/okR2IsnwwZ5hBhFkgmM/da/DGC24+F
        8CqNUY+DUlD1YMz7AZ4z4sCHS+wP08zAAEOtElefAr4FDz2DvehJWPQv1CfVKyjX/wGbvolAfFt9Tb2D
        xH0HQt9GAX1TfQGWn4UdbAMWuKQ6B5u3Y4wHgM9iTFYmhhLbRyPCNDMBZ0LjpAy3acDtwH2434annfDb
        MYg7jXg/D1zA9Rk8G1UO0tqDumSh4HL3YKlr8U4W4G6W7aMVcHkzE5bA/OFZhr/+TcCTWQB/HKC4ecB8
        YA5wM/BJ9GElqgIYpvQu229XwHs1Q4SM0CiM3qKVAwBF8prP+B3bx4P4/7ePpFnWfwOWnOO+C6Jh/AAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>